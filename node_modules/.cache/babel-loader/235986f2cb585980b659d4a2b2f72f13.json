{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\fzakrocki\\\\Documents\\\\GitHub\\\\hirehive\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import React from\"react\";import\"./CategoryButtons.css\";var categoryButtons=function categoryButtons(props){var categoryButtons=null;// checking for selected category and input to light up the button if matching\nvar checkForActivity=function checkForActivity(category){var active=false;if(category===props.category){active=true;}else if(\"#\".concat(category.toLowerCase())===props.inputFilter.trim().toLowerCase()){active=true;}return active;};// mapping unique categories to display as buttons\nif(props.jobs){var categories=props.jobs.map(function(el){return el.category;});categoryButtons=_toConsumableArray(new Set(categories)).map(function(uniqueCategory){return React.createElement(\"button\",{key:uniqueCategory,className:checkForActivity(uniqueCategory)?\"active\":null,onClick:function onClick(){return props.clicked(uniqueCategory);}},\"#\",uniqueCategory.toUpperCase());});}return React.createElement(\"div\",{className:\"CategoryButtons__wrapper\"},categoryButtons);};export default categoryButtons;","map":{"version":3,"sources":["C:/Users/fzakrocki/Documents/GitHub/hirehive/src/components/Search/CategoryButtons/CategoryButtons.js"],"names":["React","categoryButtons","props","checkForActivity","category","active","toLowerCase","inputFilter","trim","jobs","categories","map","el","Set","uniqueCategory","clicked","toUpperCase"],"mappings":"+IAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,uBAAP,CAEA,GAAMC,CAAAA,eAAe,CAAG,yBAAAC,KAAK,CAAI,CAC/B,GAAID,CAAAA,eAAe,CAAG,IAAtB,CAEA;AACA,GAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAC,QAAQ,CAAI,CACnC,GAAIC,CAAAA,MAAM,CAAG,KAAb,CACA,GAAID,QAAQ,GAAKF,KAAK,CAACE,QAAvB,CAAiC,CAC/BC,MAAM,CAAG,IAAT,CACD,CAFD,IAEO,IACL,WAAID,QAAQ,CAACE,WAAT,EAAJ,IAAiCJ,KAAK,CAACK,WAAN,CAAkBC,IAAlB,GAAyBF,WAAzB,EAD5B,CAEL,CACAD,MAAM,CAAG,IAAT,CACD,CACD,MAAOA,CAAAA,MAAP,CACD,CAVD,CAYA;AACA,GAAIH,KAAK,CAACO,IAAV,CAAgB,CACd,GAAMC,CAAAA,UAAU,CAAGR,KAAK,CAACO,IAAN,CAAWE,GAAX,CAAe,SAAAC,EAAE,QAAIA,CAAAA,EAAE,CAACR,QAAP,EAAjB,CAAnB,CACAH,eAAe,CAAG,mBAAI,GAAIY,CAAAA,GAAJ,CAAQH,UAAR,CAAJ,EAAyBC,GAAzB,CAA6B,SAAAG,cAAc,CAAI,CAC/D,MACE,+BACE,GAAG,CAAEA,cADP,CAEE,SAAS,CAAEX,gBAAgB,CAACW,cAAD,CAAhB,CAAmC,QAAnC,CAA8C,IAF3D,CAGE,OAAO,CAAE,yBAAMZ,CAAAA,KAAK,CAACa,OAAN,CAAcD,cAAd,CAAN,EAHX,MAKIA,cAAc,CAACE,WAAf,EALJ,CADF,CASD,CAViB,CAAlB,CAWD,CAED,MAAO,4BAAK,SAAS,CAAC,0BAAf,EAA2Cf,eAA3C,CAAP,CACD,CAjCD,CAmCA,cAAeA,CAAAA,eAAf","sourcesContent":["import React from \"react\";\r\nimport \"./CategoryButtons.css\";\r\n\r\nconst categoryButtons = props => {\r\n  let categoryButtons = null;\r\n\r\n  // checking for selected category and input to light up the button if matching\r\n  const checkForActivity = category => {\r\n    let active = false;\r\n    if (category === props.category) {\r\n      active = true;\r\n    } else if (\r\n      `#${category.toLowerCase()}` === props.inputFilter.trim().toLowerCase()\r\n    ) {\r\n      active = true;\r\n    }\r\n    return active;\r\n  };\r\n\r\n  // mapping unique categories to display as buttons\r\n  if (props.jobs) {\r\n    const categories = props.jobs.map(el => el.category);\r\n    categoryButtons = [...new Set(categories)].map(uniqueCategory => {\r\n      return (\r\n        <button\r\n          key={uniqueCategory}\r\n          className={checkForActivity(uniqueCategory) ? \"active\" : null}\r\n          onClick={() => props.clicked(uniqueCategory)}\r\n        >\r\n          #{uniqueCategory.toUpperCase()}\r\n        </button>\r\n      );\r\n    });\r\n  }\r\n\r\n  return <div className=\"CategoryButtons__wrapper\">{categoryButtons}</div>;\r\n};\r\n\r\nexport default categoryButtons;\r\n"]},"metadata":{},"sourceType":"module"}