{"ast":null,"code":"import React from\"react\";import\"./Results.css\";// components\nimport JobEntry from\"./JobEntry/JobEntry.js\";import RowHeaders from\"./RowHeaders/RowHeaders.js\";var Results=function Results(props){var finalList=props.jobs?props.jobs:null;//category filter\nvar categoryFilter=props.category&&props.jobs?props.jobs.filter(function(job){return props.category===job.category;}):props.jobs;//input filter\nvar inputFilter=props.inputFilter&&props.inputFilter.length>1?categoryFilter.filter(function(job){return job.description.text.toLowerCase().includes(props.inputFilter.trim().toLowerCase())||job.title.toLowerCase().includes(props.inputFilter.trim().toLowerCase())||job.location.toLowerCase().includes(props.inputFilter.trim().toLowerCase())||job.country.name.toLowerCase().includes(props.inputFilter.trim().toLowerCase())||\"#\".concat(job.category).toLowerCase().includes(props.inputFilter.trim().toLowerCase());}):categoryFilter;finalList=inputFilter.length!==0?inputFilter.map(function(job){return React.createElement(JobEntry,{url:job.hostedUrl,key:job.id,title:job.title,stateCode:job.stateCode,country:job.country,type:job.type.name,date:job.publishedDate,experience:job.experience.name,location:job.location,category:job.category});}):React.createElement(\"h1\",{className:\"Results-noResults\"},\"No results found... Try again!\");return React.createElement(\"div\",{className:\"Results__wrapper\"},React.createElement(RowHeaders,null),React.createElement(\"ul\",null,finalList));};export default Results;","map":{"version":3,"sources":["C:/Users/fzakrocki/Documents/GitHub/hirehive/src/components/Results/Results.js"],"names":["React","JobEntry","RowHeaders","Results","props","finalList","jobs","categoryFilter","category","filter","job","inputFilter","length","description","text","toLowerCase","includes","trim","title","location","country","name","map","hostedUrl","id","stateCode","type","publishedDate","experience"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,eAAP,CAEA;AACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,4BAAvB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,KAAK,CAAI,CACvB,GAAIC,CAAAA,SAAS,CAAGD,KAAK,CAACE,IAAN,CAAaF,KAAK,CAACE,IAAnB,CAA0B,IAA1C,CAEA;AACA,GAAMC,CAAAA,cAAc,CAClBH,KAAK,CAACI,QAAN,EAAkBJ,KAAK,CAACE,IAAxB,CACIF,KAAK,CAACE,IAAN,CAAWG,MAAX,CAAkB,SAAAC,GAAG,QAAIN,CAAAA,KAAK,CAACI,QAAN,GAAmBE,GAAG,CAACF,QAA3B,EAArB,CADJ,CAEIJ,KAAK,CAACE,IAHZ,CAKA;AACA,GAAMK,CAAAA,WAAW,CACfP,KAAK,CAACO,WAAN,EAAqBP,KAAK,CAACO,WAAN,CAAkBC,MAAlB,CAA2B,CAAhD,CACIL,cAAc,CAACE,MAAf,CACE,SAAAC,GAAG,QACDA,CAAAA,GAAG,CAACG,WAAJ,CAAgBC,IAAhB,CACGC,WADH,GAEGC,QAFH,CAEYZ,KAAK,CAACO,WAAN,CAAkBM,IAAlB,GAAyBF,WAAzB,EAFZ,GAGAL,GAAG,CAACQ,KAAJ,CACGH,WADH,GAEGC,QAFH,CAEYZ,KAAK,CAACO,WAAN,CAAkBM,IAAlB,GAAyBF,WAAzB,EAFZ,CAHA,EAMAL,GAAG,CAACS,QAAJ,CACGJ,WADH,GAEGC,QAFH,CAEYZ,KAAK,CAACO,WAAN,CAAkBM,IAAlB,GAAyBF,WAAzB,EAFZ,CANA,EASAL,GAAG,CAACU,OAAJ,CAAYC,IAAZ,CACGN,WADH,GAEGC,QAFH,CAEYZ,KAAK,CAACO,WAAN,CAAkBM,IAAlB,GAAyBF,WAAzB,EAFZ,CATA,EAYA,WAAIL,GAAG,CAACF,QAAR,EACGO,WADH,GAEGC,QAFH,CAEYZ,KAAK,CAACO,WAAN,CAAkBM,IAAlB,GAAyBF,WAAzB,EAFZ,CAbC,EADL,CADJ,CAmBIR,cApBN,CAsBAF,SAAS,CACPM,WAAW,CAACC,MAAZ,GAAuB,CAAvB,CACED,WAAW,CAACW,GAAZ,CAAgB,SAAAZ,GAAG,CAAI,CACrB,MACE,qBAAC,QAAD,EACE,GAAG,CAAEA,GAAG,CAACa,SADX,CAEE,GAAG,CAAEb,GAAG,CAACc,EAFX,CAGE,KAAK,CAAEd,GAAG,CAACQ,KAHb,CAIE,SAAS,CAAER,GAAG,CAACe,SAJjB,CAKE,OAAO,CAAEf,GAAG,CAACU,OALf,CAME,IAAI,CAAEV,GAAG,CAACgB,IAAJ,CAASL,IANjB,CAOE,IAAI,CAAEX,GAAG,CAACiB,aAPZ,CAQE,UAAU,CAAEjB,GAAG,CAACkB,UAAJ,CAAeP,IAR7B,CASE,QAAQ,CAAEX,GAAG,CAACS,QAThB,CAUE,QAAQ,CAAET,GAAG,CAACF,QAVhB,EADF,CAcD,CAfD,CADF,CAkBE,0BAAI,SAAS,CAAC,mBAAd,mCAnBJ,CAsBA,MACE,4BAAK,SAAS,CAAC,kBAAf,EACE,oBAAC,UAAD,MADF,CAEE,8BAAKH,SAAL,CAFF,CADF,CAMD,CA5DD,CA8DA,cAAeF,CAAAA,OAAf","sourcesContent":["import React from \"react\";\r\nimport \"./Results.css\";\r\n\r\n// components\r\nimport JobEntry from \"./JobEntry/JobEntry.js\";\r\nimport RowHeaders from \"./RowHeaders/RowHeaders.js\";\r\n\r\nconst Results = props => {\r\n  let finalList = props.jobs ? props.jobs : null;\r\n\r\n  //category filter\r\n  const categoryFilter =\r\n    props.category && props.jobs\r\n      ? props.jobs.filter(job => props.category === job.category)\r\n      : props.jobs;\r\n\r\n  //input filter\r\n  const inputFilter =\r\n    props.inputFilter && props.inputFilter.length > 1\r\n      ? categoryFilter.filter(\r\n          job =>\r\n            job.description.text\r\n              .toLowerCase()\r\n              .includes(props.inputFilter.trim().toLowerCase()) ||\r\n            job.title\r\n              .toLowerCase()\r\n              .includes(props.inputFilter.trim().toLowerCase()) ||\r\n            job.location\r\n              .toLowerCase()\r\n              .includes(props.inputFilter.trim().toLowerCase()) ||\r\n            job.country.name\r\n              .toLowerCase()\r\n              .includes(props.inputFilter.trim().toLowerCase()) ||\r\n            `#${job.category}`\r\n              .toLowerCase()\r\n              .includes(props.inputFilter.trim().toLowerCase())\r\n        )\r\n      : categoryFilter;\r\n\r\n  finalList =\r\n    inputFilter.length !== 0 ? (\r\n      inputFilter.map(job => {\r\n        return (\r\n          <JobEntry\r\n            url={job.hostedUrl}\r\n            key={job.id}\r\n            title={job.title}\r\n            stateCode={job.stateCode}\r\n            country={job.country}\r\n            type={job.type.name}\r\n            date={job.publishedDate}\r\n            experience={job.experience.name}\r\n            location={job.location}\r\n            category={job.category}\r\n          />\r\n        );\r\n      })\r\n    ) : (\r\n      <h1 className=\"Results-noResults\">No results found... Try again!</h1>\r\n    );\r\n\r\n  return (\r\n    <div className=\"Results__wrapper\">\r\n      <RowHeaders />\r\n      <ul>{finalList}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n"]},"metadata":{},"sourceType":"module"}